# EXERCITIUL 1:
# Având lista:
# mașini = ['Audi', 'Volvo', 'BMW', 'Mercedes', 'Aston Martin', 'Lăstun', 'Fiat', 'Trabant', 'Opel'] 
# Folosește un for că să iterezi prin toată lista și să afișezi; ‘Mașina mea preferată este x’.
# Fă același lucru cu un for each.
# Fă același lucru cu un while.

masini = ['Audi', 'Volvo', 'BMW', 'Mercedes', 'Aston Martin', 'Lăstun', 'Fiat', 'Trabant', 'Opel']

# iteram cu un for
for i in range(len(masini)):
    print(f'Mașina mea preferată este {masini[i]}')
# iteram cu un for each
for masina in masini:
    print(f"Masina mea preferata este {masina}.")
# iteram cu un while
i = 0
while i < len(masini):
    print(f"Masina mea preferata este {masini[i]}.")
    i += 1

# EXERCITIUL 2:
# Aceeași listă:
# Folosește un for else
# În for
# Modifică elementele din listă astfel încât să fie scrise cu majuscule, exceptând primul și ultimul.
# În else:
#  Printează lista.

masini = ['Audi', 'Volvo', 'BMW', 'Mercedes', 'Aston Martin', 'Lăstun', 'Fiat', 'Trabant', 'Opel']
for i in range(1, len(masini) - 1):
    masini[i] = masini[i].upper()
    print(masini)
else:
    print(masini)

# EXERCITIUL 3:
# Aceeași listă:
# Vine un cumpărător care dorește să cumpere un Mercedes.
# Iterează prin ea prin modalitatea aleasă de tine.
# Dacă mașina e mercedes:
#   Printează ‘am găsit mașina dorită de dvs’
#   Ieși din ciclu folosind un cuvânt cheie care face acest lucru
# Altfel:
#   Printează ‘Am găsit mașina X. Mai căutam‘

masini = ['Audi', 'Volvo', 'BMW', 'Mercedes', 'Aston Martin', 'Lăstun', 'Fiat', 'Trabant', 'Opel']
masina_dorita = input("Ce marca de masina doriti sa cumparati?\n")
for masina in masini:
    if masina == masina_dorita:
        print(f"Am gasit masina dorita de dvs.")
        break
    else:
        print(f"Am gasit masina {masina}, mai cautam.")
else:
    print("Nu avem aceasta marca de masina.")

# EXERCITIUL 4:
# Aceeași listă;
# Vine un cumpărător bogat dar indecis. Îi vom prezenta toate mașinile cu excepția Trabant și Lăstun. 
# Dacă mașina e Trabant sau Lăstun:
#   Folosește un cuvânt cheie care să dea skip la ce urmează (nu trebuie else).
# Printează: S-ar putea să vă placă mașina x.

masini = ['Audi', 'Volvo', 'BMW', 'Mercedes', 'Aston Martin', 'Lăstun', 'Fiat', 'Trabant', 'Opel']
for masina in masini:
    if masina == "Lăstun" or masina == "Trabant":
        continue
    print(f"S-ar putea sa va placa {masina}.")

# EXERCITIUL 5:
# Modernizează parcul de mașini:
# Crează o listă goală, masini_vechi.
# Iterează prin mașini.
# Când găsesti Lăstun sau Trabant:
# Salvează aceste mașini în masini_vechi.
# Suprascrie-le cu ‘Tesla’ (în lista inițială de mașini).
# Printează Modele vechi: x.
# Modele noi: x.

masini = ['Audi', 'Volvo', 'BMW', 'Mercedes', 'Aston Martin', 'Lăstun', 'Fiat', 'Trabant', 'Opel']
masini_vechi = []
masini_noi = []
for index, masina in enumerate(masini):
    # cu functia enumerate putem schimba mai usor valoarea atunci cand nu stim indexul
    if masina == "Lăstun":
        masini_vechi.append(masina)
        masini[index] = "Tesla"
        masini_noi.append(masini[index])
    elif masina == "Trabant":
        masini_vechi.append(masina)
        masini[index] = "Ferrari"
        masini_noi.append(masini[index])
print(f"Modelele vechi de masini sunt: {', '.join(masini_vechi)}.")
print(f"Modelele noi de masini sunt:{', '.join(masini_noi)}.")

# EXERCITIUL 6:
# Având dict:
# pret_masini = {
    'Dacia': 6800,
    'Lăstun': 500,
    'Opel': 1100,
    'Audi': 19000,
    'BMW': 23000
}

# Vine un client cu un buget de 15000 euro.
# Prezintă doar mașinile care se încadrează în acest buget.
# Iterează prin dict.items() și accesează mașina și prețul.
# Printează Pentru un buget de sub 15000 euro puteți alege mașină xLastun
# Iterează prin listă.

pret_masini = {
    'Dacia': 6800,
    'Lăstun': 500,
    'Opel': 1100,
    'Audi': 19000,
    'BMW': 23000
}
client = 15000
for masini,pret in pret_masini.items():
    if pret < client:
        print(f'Pentru un buget de sub 15000 euro puteti alege masina {masini} !')

# EXERCITIUL 7:
# Având lista: numere = numere = [5, 7, 3, 9, 3, 3, 1, 0, -4, 3]
# Iterează prin ea.
# Afișează de câte ori apare 3 (nu ai voie să folosești count).

numere = [5, 7, 3, 9, 3, 3, 1, 0, -4, 3]
x = 0
for i in range(len(numere)):
    if numere[i] == 3:
        x += 1
print(f'Numarul 3 apare de {x} ori.')

# EXERCITIUL 8:
# Aceeași listă:
# Iterează prin ea
# Calculează și afișează suma numerelor (nu ai voie să folosești sum).

numere = [5, 7, 3, 9, 3, 3, 1, 0, -4, 3]
total = 0
for numar in numere:
    total += numar
print(f'Suma numerelor este {total}.')

# EXERCITIUL 9:
# Aceeași listă:
# Iterează prin ea.
# Afișază cel mai mare număr (nu ai voie să folosești max).

numere = [5, 7, 3, 9, 3, 3, 1, 0, -4, 3]
x = 0
for numar in numere:
    if numar > x:
        x = numar
print(f'Cel mai mare numar este {x}.')

# EXERCITIUL 10:
# Aceeași listă:
# Iterează prin ea.
# Dacă numărul e pozitiv, înlocuieste-l cu valoarea lui negativă.
# Ex: dacă e 3, să devină -3
# Afișază noua listă.

numere = [5, 7, 3, 9, 3, 3, 1, 0, -4, 3]
# var 1
for numar in numere:
    if numar > 0:
        print(numar*(-1))
# var 2
for numar in numere:
    if numar > 0:
        print(-abs(numar))




# EXERCITII OPTIONALE:

# EXERCITIUL 1:
# alte_numere = [-5, 7, 2, 9, 12, 3, 1, -6, -4, 3]
numere_pare = []
numere_impare = []
numere_pozitive = []
numere_negative = []
# Itereaza prin listă alte_numere 
# Populează corect celelalte liste
# Afișează cele 4 liste la final

alte_numere = [-5, 7, 2, 9, 12, 3, 1, -6, -4, 3]
numere_pare = []
numere_impare = []
numere_pozitive = []
numere_negative = []

for alt_numar in alte_numere:
    if alt_numar % 2 == 0:
        numere_pare.append(alt_numar)
    if alt_numar % 2 != 0:
        numere_impare.append(alt_numar)
    if alt_numar > 0:
        numere_pozitive.append(alt_numar)
    if alt_numar < 0:
        numere_negative.append(alt_numar)
print(numere_pare)
print(numere_impare)
print(numere_pozitive)
print(numere_negative)

# EXERCITIUL 2:
# Aceeași listă:
# Ordonează crescător lista fară să folosești sort.
# Va puteti inspira vizual de aici.
https://www.youtube.com/watch?v=lyZQPjUT5B4

alte_numere = [-5, 7, 2, 9, 12, 3, 1, -6, -4, 3]
x = len(alte_numere)
for i in range(x):
    for j in range(x - i - 1):
        if alte_numere[j] > alte_numere[j + 1]:
            alte_numere[j], alte_numere[j + 1] = alte_numere[j + 1], alte_numere[j]
print(alte_numere)

# EXERCITIUL 3:
# Ghicitoare de număr:
numar_secret = Generați un număr random între 1 și 30
Numar_ghicit = None
Folosind un while
   User alege un număr
   Programul îi spune:
⦁	Nr secret e mai mare
⦁	Nr secret e mai mic
⦁	Felicitari! Ai ghicit!

import random
number_to_guess = random.randint(1, 30)
guessed = False

while not guessed:
    user_input = int(input("Choose a number. (0-30)\n"))
    if user_input > number_to_guess:
        print("Too high.")
    elif user_input < number_to_guess:
        print("Too low.")
    elif user_input == number_to_guess:
        print(f"Congratulation! You guess the number.")
        guessed = True

# EXERCITIUL 4:
# Alege un număr de la tastatură
Ex: 7
Scrie un program care să genereze în consolă următoarea piramidă
1
22
333
4444
55555
666666
7777777

Ex:3
1
22
333

number = int(input("Insert a number:\n"))
for i in range(1, number + 1):
    print(str(i) * i)

# EXERCITIUL 5:
# tastatura_telefon = [
  [1, 2, 3],
  [4, 5, 6],
  [7, 8, 9],
  [0]
]
# Iterează prin listă 2d
# Printează ‘Cifra curentă este x’
# (hint: nested for - adică for în for).

tastatura_telefon = [
  [1, 2, 3],
  [4, 5, 6],
  [7, 8, 9],
  [0]
]

for i in range(len(tastatura_telefon)):
    for y in range(len(tastatura_telefon[i])):
        print(f"Cifra curenta este {tastatura_telefon[i][y]}.")












